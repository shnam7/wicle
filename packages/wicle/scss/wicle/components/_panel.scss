//=========================================================
//
//  @package Wicle Collection
//  @module ui/components/panel
//
//=========================================================

@use 'wdk/reg';
@use 'wdk/color';

//-----------------------------------------------
//  Config
//-----------------------------------------------
@mixin w-panel-config {
    $key: 'w-panel';

    // core
    @include reg.ssv($key, 'padding', 1rem, true);
    @include reg.ssv($key, 'border', none, true);
    @include reg.ssv($key, 'radius', reg.gsv('site', 'border-radius'), true);
    @include reg.ssv($key, 'gradient', (level:20%, direction:bottom), true);

    // modifiers
    @include reg.ssv($key, 'gradient', (level:20%, direction:bottom), true);
    @include reg.ssv($key, 'alpha', 0.75, true);
}


//-----------------------------------------------
//  Mixins
//-----------------------------------------------
@mixin w-panel-core {
    $key: 'w-panel';

    display: block;
    position: relative;
    padding: reg.gsv($key, padding);
    border-radius: reg.gsv($key, radius);
    border: reg.gsv($key, border);
}

@mixin w-panel-styles($bg, $alpha:false) {
    $key: 'w-panel';

    $fg: yiq-color($bg);
    $line: color.smart-scale($bg, 20%);
    $gr: reg.gsv($key, 'gradient');

    @if $alpha {
        $fg: color.$text-black;
        $bg: color.adjust($bg, $alpha: -1 * reg.gsv($key, 'alpha'));
    }

    color: $fg;
    background: if($gr, gradient($bg, reg.get($gr, level), reg.get($gr, direction)), $bg);
    border-color: color.scale($line, $alpha: 70%);
}

//
//  Generate Button styles for color selections
//  @param {Map} [$color-scheme=null] - Set of $color-schemes. If null, $w-color-scheme is used
//
@mixin w-panel-modifier-color-scheme($color-scheme: null) {
    .w-panel {

        // default color style is generated by default. So, no need to grnerate again.
        // @include w-panel-styles(color.$text-black);
        &.wo-alpha {
            @include w-panel-styles(color.$text-white, true)
        }

        // color scheme
        $color-scheme: if($color-scheme, $color-scheme, $w-color-scheme);

        @each $scheme in $color-scheme {
            $name: list.nth($scheme, 1);
            $color: list.nth($scheme, 2);

            &.wo-#{$name} {
                @include w-panel-styles($color);
            }

            // alpha mode (semi transparent)
            &.wo-#{$name}.wo-alpha {
                @include w-panel-styles($color, true);
            }
        }
    }
}

@mixin w-panel-default-styles {
    @include w-panel-styles(color.$text-white)
}

//-----------------------------------------------
//  Elements
//-----------------------------------------------
@include w-panel-config();

.w-panel {
    @include w-panel-core;
    @include w-panel-default-styles;
}
