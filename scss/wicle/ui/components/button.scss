//=========================================================
//
//  @package  Wicle
//  @module   ui/components/button
//
//=========================================================

@import "../../../wdk/wdk";

// shortcut function: valid only in this file
@function cv($path:null) {  @return gsv('w-button', $path);  }


//-----------------------------------------------
//  mixin's
//-----------------------------------------------
@mixin w-button-init {
  @if mixin-exists(w-hook-button-init) { @include w-hook-button-init(); }

  //--- globals variables
  $w-button-generate-classes: true !default !global; // enable class generation

  //-- local variables
  $key: 'w-button';

  // core
  @include ssv($key, 'margin', 0, true);
  @include ssv($key, 'padding', 0.25rem 1rem, true);
  @include ssv($key, 'line-height', 1.5, true);
  @include ssv($key, 'border', (1px solid $w-color-theme), true);
  @include ssv($key, 'radius', $w-border-radius, true);
  @include ssv($key, 'transition', all 0.15s ease-in-out, true);

  // compact
  @include ssv($key, 'compact/font-size', 90%, true);
  @include ssv($key, 'compact/line-height', 1.75, true);
  @include ssv($key, 'compact/padding', 0 0.75rem, true);

  @if mixin-exists(w-hook-button-override) { @include w-hook-button-override(); }
}

@mixin w-button-core() {
  display: inline-block;    // this is required to vertical margin overlapping
  box-sizing: border-box;
  white-space:nowrap;
  text-transform: none;
  vertical-align: middle;
  text-align: center;       // align the text for the cases width is set
  text-decoration: none;

  margin: cv(margin);
  padding: cv(padding);
  line-height: cv(line-height);
  border: cv(border);
  border-radius: cv(radius);
  transition: cv(transition);

  &:not(:disabled) { cursor: pointer; }
  &:hover { text-decoration: none; }
}

@mixin w-button-opt-compact {
  font-size: cv('compact/font-size');
  padding: cv('compact/padding');
  line-height: cv('compact/line-height');
}

@mixin w-button-styles($color, $alpha:false) {
  $fg: yiq-color($color);
  $bg: $color;
  $line: transparentize($color, 0.7);
  $hover: darken($bg, 10%);

  @if $alpha {
    $fg: $color;
    $bg: transparentize($fg, 0.95);
    $hover: opacify($bg, 0.1);
  }

  &, &:link {
    color: $fg;
    background: $bg;
    border-color: $line;
    &:hover {
      background: $hover;
    }
  }
}

@mixin w-button-options {
  &.wo-compact {
    @include w-button-opt-compact;
  }
  &.wo-alpha {
    @include w-button-styles($w-color-text-black, true)
  }

  // color scheme
  @each $scheme in $w-color-scheme {
    $name: nth($scheme, 1);
    $color: nth($scheme, 2);
    &.wo-#{$name} {
      @include w-button-styles($color);
    }
    // alpha mode (semi transparent)
    &.wo-#{$name}.wo-alpha {
      @include w-button-styles($color, true);
    }
  }
}


//-----------------------------------------------
//  module init
//-----------------------------------------------
@include w-button-init;


//-----------------------------------------------
//  class generation
//-----------------------------------------------
@if $w-wicle-mode == 'css' and $w-button-generate-classes {
  .w-button,
  a.w-button {
    @include w-button-core;
    @include w-button-options;
    @include w-button-styles($w-color-text-white);
  }
}

@if mixin-exists(w-hook-button) { @include w-hook-button(); }
