//=========================================================
//
//  @package Wicle
//  @module ui/components/button
//
//=========================================================

@import "wdk/wdk";

//-----------------------------------------------
//  data
//-----------------------------------------------
$w-button-generate-classes:     true !default;   // enable w-button class generation
$w-conf-button: ();

// core
$w-conf-button: scv($w-conf-button, 'margin', 0, true);
$w-conf-button: scv($w-conf-button, 'padding', 0.5rem 1.25rem, true);
$w-conf-button: scv($w-conf-button, 'line-height', 1.5, true);
$w-conf-button: scv($w-conf-button, 'border', (1px solid $w-color-fg), true);
$w-conf-button: scv($w-conf-button, 'radius', $w-border-radius, true);
$w-conf-button: scv($w-conf-button, 'transition', all 0.15s ease-in-out, true);

// compact
$w-conf-button: scv($w-conf-button, 'compact/font-size', 90%, true);
$w-conf-button: scv($w-conf-button, 'compact/line-height', 1.75rem, true);
$w-conf-button: scv($w-conf-button, 'compact/padding', 0 0.75rem, true);

//--- data interface
@mixin scv-button($path, $value, $default) {
  $w-conf-button: scv($w-conf-button, $path, $value, $default) !global;
}


//=== data interface
@mixin scv-button($path, $value, $default:false) {
  $w-conf-button: scv($w-conf-button, $value) !global;
}

@function gcv-button($path) {
  @return gcv($w-conf-button, $path);
}



//-----------------------------------------------
//  mixin's
//-----------------------------------------------
@mixin w-button-core() {
  display: inline-block;    // this is required to vertical margin overlapping
  box-sizing: border-box;
  white-space:nowrap;
  text-transform: none;
  vertical-align: middle;
  text-align: center;       // align the text for the cases width is set
  text-decoration: none;

  margin: gcv-button(margin);
  padding: gcv-button(padding);
  line-height: gcv-button(line-height);
  border: gcv-button(border);
  border-radius: gcv-button(radius);
  transition: gcv-button(transition);

  &:not(:disabled) { cursor: pointer; }
  &:hover { text-decoration: none; }
}

@mixin w-button-color($color, $alpha:false) {
  $fg: yiq-color($color);
  $bg: $color;
  $line: transparentize($color, 0.7);
  $hover: darken($bg, 10%);

  @if $alpha {
    $fg: $color;
    $bg: transparentize($fg, 0.95);
    $hover: opacify($bg, 0.1);
  }

  &, &:link {
    color: $fg;
    background: $bg;
    border-color: $line;
    &:hover {
      background: $hover;;
    }
  }
}

@mixin w-button($color:$w-color-text-white) {
  @include w-button-core();
  @include w-button-color($color);
}

@mixin w-button-compact {
  font-size: gcv-button('compact/font-size');
  padding: gcv-button('compact/padding');
  line-height: gcv-button('compact/line-height');
}



//-----------------------------------------------
//  class generation
//-----------------------------------------------
@if $w-wicle-mode != 'scss' and $w-button-generate-classes {
  .w-button,
  a.w-button {
    @include w-button($w-color-text-white);
    &.wo-alpha {
      @include w-button-color($w-color-text-black, true)
    }

    // color scheme
    @each $scheme in $w-color-scheme {
      $name: nth($scheme, 1);
      $color: nth($scheme, 2);
      &.wo-#{$name} {
        @include w-button-color($color);
      }
      // alpha mode (semi transparent)
      &.wo-#{$name}.wo-alpha {
        @include w-button-color($color, true);
      }
    }
    &.wo-compact {
      @include w-button-compact;
    }
  }
}
