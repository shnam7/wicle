//=========================================================
//
//  @package  Wicle Collection
//  @module   ui/components/button
//
//  @usage
//    <div class="w-button wo-compact..."></div>
//  @options
//    - wo-compact
//    - wo-outline
//    - disabled
//    - color scheme
//      wo-primary, wo-secondary, wo-success, wo-info, wp-warning, wo-danger
//
//=========================================================


//-----------------------------------------------
//  Config
//-----------------------------------------------
@mixin w-button-config {
    $key: 'w-button';

    // core
    @include ssv($key, 'margin', 0, true);
    @include ssv($key, 'padding', 0.25rem 1rem, true);
    @include ssv($key, 'line-height', 1.5, true);
    @include ssv($key, 'radius', $w-border-radius, true);
    @include ssv($key, 'transition', (all 0.15s), true);
    @include ssv($key, 'alpha', 0.75, true);
    // @include ssv($key, 'gradient', (level:20%, direction:bottom), true);

    // modifier: compact
    @include ssv($key, 'compact/font-size', 90%, true);
    @include ssv($key, 'compact/line-height', 1.75, true);
    @include ssv($key, 'compact/padding', 0 0.75rem, true);

    // outline
    @include ssv($key, 'outline/alpha', 0.5, true);
}


//-----------------------------------------------
//  Mixins
//-----------------------------------------------
@mixin w-button-core() {
    $key: 'w-button';

    display: inline-block; // this is required to vertical margin overlapping
    position: relative;
    box-sizing: border-box;
    white-space: nowrap;
    text-transform: none;
    vertical-align: middle;
    text-align: center; // align the text for the cases width is set
    text-decoration: none;

    margin: gsv($key, 'margin');
    padding: gsv($key, 'padding');
    line-height: gsv($key, line-height);

    border: 1px solid transparent; //gsv($key, 'border');
    outline: none;
    border-radius: gsv($key, 'radius');
    transition: gsv($key, 'transition');

    &:not(:disabled) {
        cursor: pointer;
    }

    &:hover {
        text-decoration: none;
    }

    &:focus {
        outline: none;
    }

    //--- Settings for gradient
    // Create a background layer with :after property for gradient animation.
    // This is a workaround for gradient not supporting transition
    // This background layer will reveal on mouse hover
    @if gsv($key, 'gradient') {
        z-index: 1;

        &:after {
            position: absolute;
            content: '';
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: gsv($key, radius);
            transition: gsv($key, transition);
            z-index: -1; // set layer below the button
            opacity: 0;
        }

        &:hover:after {
            opacity: 1;
        }
    }
}

@mixin w-button-modifiers-compact {
    $key: 'w-button';

    &.wo-compact {
        font-size: gsv($key, 'compact/font-size');
        padding: gsv($key, 'compact/padding');
        line-height: gsv($key, 'compact/line-height');
    }
}

@mixin w-button-modifiers-outline() {
    $key: 'w-button';

    &.wo-outline {
        background: transparent;

        &:after {
            display: none;
        }
    }
}

@mixin w-button-modifiers-disabled {
    $key: 'w-button';

    &:disabled,
    &.disabled {
        opacity: 0.65;
        pointer-events: none;
    }
}

@mixin w-button-gradient($bg:null, $gr: (level:20%, direction:bottom)) {
    $key: 'w-button';
    $hover: darken($bg, 10%);

    z-index: 1;

    @if $bg {
        background: if($gr, gradient($bg, gcv($gr, level), gcv($gr, direction)), $bg);
        background-clip: padding-box; // remove dummy borders for gradients
    }

    &:after {
        position: absolute;
        content: '';
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: gsv($key, radius);
        transition: gsv($key, transition);
        z-index: -1; // set layer below the button
        opacity: 0;
    }

    &:hover:after {
        @if $bg {
            background: gradient($hover, gcv($gr, level), gcv($gr, direction));
        }

        opacity: 1;
    }
}

@mixin w-button-styles($color, $alpha:false) {
    $key: 'w-button';

    $fg: yiq-color($color);
    $bg: $color;
    $gr: gsv($key, 'gradient');
    $hover: darken($bg, 10%);

    @if $alpha {
        $fg: darken(saturate($color, 15%), 15%);
        $bg: transparentize($fg, gsv($key, 'alpha'));
        $hover: opacify($bg, 0.1);

        @if (saturation($fg) <=50%) {
            $fg: invert($fg, 50%);
        }
    }

    &,
    a {
        color: $fg;
    }

    background: if($gr, gradient($bg, gcv($gr, level), gcv($gr, direction)), $bg);
    background-clip: padding-box; // remove dummy borders for gradients

    @if $gr {
        &:after {
            background: gradient($hover, gcv($gr, level), gcv($gr, direction));
        }
    }

    @else {
        &:hover {
            background: $hover;
        }
    }
}


//
//  Generate Button styles for color selections
//  @param {Map} [$color-scheme=null] - Set of $color-schemes. If null, $w-color-scheme is used
//
@mixin w-button-modifier-color-scheme($color-scheme:null) {
    $key: 'w-button';

    .w-button {
        $color-scheme: if($color-scheme, $color-scheme, $w-color-scheme);

        @each $scheme in $w-color-scheme {
            $name: nth($scheme, 1);
            $color: nth($scheme, 2);

            // outline option
            &.wo-outline.wo-#{$name} {
                color: $color;
                border: 1px solid transparentize($color, gsv($key, 'outline/alpha'));

                &:hover {
                    color: yiq-color($color);
                    background: $color;
                }
            }

            &:not(.wo-outline).wo-#{$name} {
                @include w-button-styles($color);

                // alpha mode (semi transparent)
                &.wo-alpha {
                    @include w-button-styles($color, true);
                }
            }
        }
    }
}

@mixin w-button-default-styles {
    $key: 'w-button';
    $default-color: gray(90%);

    @include w-button-styles($default-color);

    &.wo-alpha {
        @include w-button-styles($default-color, true);
    }

    &.wo-outline {
        $fg: yiq-color($default-color);
        border: 1px solid transparentize($fg, gsv($key, 'outline/alpha'));
        color: $fg;

        &:hover {
            $fg: if(saturation($fg) <=50%, invert($fg, 50%), $fg);
            color: $fg;
            background: $default-color;
        }
    }
}


//-----------------------------------------------
//  Elements
//-----------------------------------------------
@include w-button-config();

.w-button {
    @include w-button-core();
    @include w-button-modifiers-compact();
    @include w-button-modifiers-outline();
    @include w-button-modifiers-disabled();
    @include w-button-default-styles();
}
