//=========================================================
//
//  @package Wicle WDK
//  @module functions/color
//
//=========================================================

//
//  Calculate YIQ value: https://24ways.org/2010/calculating-color-contrast
//    @param $color{Color}        Color to be calculated (typically background color)
//    @return normalized YIQ value (0.0 ~ 1.0)
//
@function yiq($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  @return (($r*299) + ($g*587) + ($b*114))/(256*1000);
}

//
//  Returns $black or $white depending on the yiq value of the $color
//  to have highest contrast.
//    @param $color{Color}        Color to be compared (typically background color)
//    @param $threshold{Number)   Threshold for yiq value to determine $black and $white
//    @param $black{Color=#444}   Color code for black
//    @param $white{Color=#EEE}   Color code for white
//    @return $black or $white which has higher contrast with $color
//
@function yiq-color($color, $threshold:0.6, $black:#444, $white:#EEE) {
  @return if(yiq($color) >= $threshold, $black, $white);
}

//
// Mix a color with white
//
@function tint($color, $percent:5%) {
  @return mix(#fff, $color, $percent);
}

//
// Mix a color with black
//
@function shade($color, $percent:5%) {
  @return mix(#000, $color, $percent);
}

//
//  Returns gray scale color
//    @param $percent{Percent}  Gray scale level from black
//    @param $alpha{Percent}    Alpha value
//    @return {Color}           Gray scale color
//
@function gray($percent, $alpha:null) {
  $val: lighten(#000, $percent);
  @return if($alpha, rgba($val, $alpha), $val);
}

//
//  Source: foundation-site (http://foundation.zurb.com/)
//  Scales a color to be lighter if it's light, or darker if it's dark.
//  Use this function to tint a color appropriate to its lightness.
//
//  @param {Color} $color - Color to scale.
//  @param {Percentage} $scale [5%] - Amount to scale up or down.
//  @param {Percentage} $threshold [40%] - Threshold of lightness to check against.
//  @returns {Color} A scaled color.
//
@function smart-scale($color, $scale: 5%, $threshold: 40%) {
  @if lightness($color) > $threshold {
    $scale: -$scale;
  }
  @return scale-color($color, $lightness: $scale);
}

//
//  Make linear gradient with $color in the center of gradient
//
@function gradient($color, $gradient-level:10%, $direction:bottom) {
  @if $color==transparent or strip-unit($gradient-level)==0 { @return $color; }
  @return linear-gradient(to $direction,
          tint($color, $gradient-level/2), shade($color, $gradient-level/2));
}
